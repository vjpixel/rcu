article#sensor
	header#sensor-header.sub-header.anti-row.row(scroll-fixed use-width="0")
		.sensor-map(ng-controller="MapCtrl")
			leaflet#map(center="map.center" layers="map.layers" legend="legend" markers="markers" defaults="map.options")
			.highlight-point
		.header-content
			.container
				.four.columns
					h1 
						a(ui-sref="sensor"){{sensor.name}}
					//- .header-summary
					//- 	.quality
					//- 		h2 Qualidade agora
					//- 			span.green Boa
					//- 		p.detail Última medição: 1 hora atrás
				.eight.columns
					.clearfix
						nav#sensor-nav.header-nav
							a(ui-sref="sensor({'#': 'sensor-community'})" translate) Local
							a(ui-sref="sensor({'#': 'sensor-main'})" translate) Últimas medições
							a(ui-sref="sensor({'#': 'sensor-charts'})" translate) Dados históricos
							a(ui-sref="sensor({'#': 'sensor-city'})" ng-show="visaguasUrl") {{city}}
					.clearfix(ng-controller="SensorSubscription")
						a.button.subscribe(ui-sref="sensor.subscribe" ng-hide="subscribed()") 
							span.icon-rss 
							span(translate) Receba atualizações deste sensor
						a.button.subscribe(href="#" ng-click="unsubscribe()" ng-show="subscribed()") 
							span.icon-cross 
							span(translate) Cancelar assinatura deste sensor
	#sensor-content(ui-view)
		section#sensor-community.anchor-section
			.container
				.twelve.columns
					img.cmm-pic(ng-src="{{sensor.image}}")
					h2(translate) Local deste sensor
					p {{sensor.description}} 
		section#sensor-main.anchor-section
			.container
				.six.columns
					.sensor-average
						h2(translate) Média dos últimos 30 dias
						ul.average-list
							li.average-item(ng-repeat="(key, average) in averages")
								h3 {{params[key].name[paramLang]}}
								p {{average[0].avg.toFixed(1)}} {{params[key].defaultUnit}}
				.six.columns
					latest-readings(sensor="sensor._id" amount="'4'" params="['electrical_conductivity', 'oxi-reduction_potential', 'ph']")
		section#sensor-charts.anchor-section.row
			.sensor-chart
				header#sensor-charts-header
					.container
						.twelve.columns
							h2(translate) Dados históricos
							nav.chart-filters
								.chart-filter-item
									select(ng-model="chart.current.date" ng-options="(param.label | translate) for param in chart.params.date track by param.value")
										//- option(ng-repeat="param in chart.params.date" value="{{param.value}}" translate) {{param.label}}
								.chart-filter-item(ng-show="chart.current.date.value == 'custom'")
									span.datepicker-label(ng-click="togglePicker('from')")
										span.icon-calendar
										span.label(translate) Data de início 
										span.value(ng-show="picker.from") {{picker.from}}
									.datepicker(pickadate ng-show="showFrom" ng-model="picker.from" prev-label="'anterior' | translate" next-label="'próximo' | translate")
								.chart-filter-item(ng-show="chart.current.date.value == 'custom'")
									span.datepicker-label(ng-click="togglePicker('to')")
										span.icon-calendar
										span.label Data de fim 
										span.value(ng-show="picker.to") {{picker.to}}
									.datepicker(pickadate ng-show="showTo" ng-model="picker.to" prev-label="'anterior' | translate" next-label="'próximo' | translate" min-date="picker.from")
				nav.chart-nav
					.container
						.twelve.columns
							a(ng-repeat="param in chart.params.type" href="javascript:void(0);" ng-click="chartMeasure(param)" ng-class="{active: chart.current.type._id == param._id}") {{param.name[paramLang]}} 
				.container
					.twelve.columns
						.chart
							reading-chart(dataset="aggregates" label="chart.current.type.name[paramLang]")
				.container
					.six.columns
						.download
							a.button(href="#" translate) Baixar estes dados
					.six.columns
						.report
							a.button(ui-sref="sensor.report({from: chartDateFrom, to: chartDateTo})" translate) Gerar relatório

